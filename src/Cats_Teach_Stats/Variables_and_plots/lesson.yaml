- Class: meta
  Course: CatsTeachStats
  Lesson: Variables_and_plots
  Author: Jenny Hazlehurst, Darcy Taniguchi, and Suann Yang
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.3


- Class: text
  Output: In this lesson, we are going to learn a bit about variable types and plotting variables

- Class: mult_question
  Output: Did you watch a video of William Plumer Jacobs booping a particle (ball) in his accelerator (cat toy)?
  AnswerChoices: Yes; No
  CorrectAnswer: Yes
  AnswerTests: omnitest(correctVal='Yes')
  Hint: 'Watch the video in the lesson Data Collection Basics and count the boops he makes with each paw'


- Class: text
  Output: You just dealt two groups of variables--type of boop (left or right paw) and boop counts

- Class: mult_question
  Output: Are the boop counts an example of a dependent (response) variable or an independent (explanatory) variable?
  AnswerChoices: dependent (response); independent (explanatory)
  AnswerTests: omnitest(correctVal="dependent (response)")
  Hint: 'A dependent, also called a response, variable is a variable that is predicted or affected by another variable. An independent, sometimes called an explanatory, variable is a variable that affects or explains changes in the response variable.'

- Class: mult_question
  Output: Is the type of boop (left paw or right paw boop) an example of a dependent (response) variable or an independent (explanatory) variable?
  AnswerChoices: dependent (response); independent (explanatory)
  AnswerTests: omnitest(correctVal="independent (explanatory)")
  Hint: 'Think about the answer to the previous question and how it relates to this question.'

- Class: text
  Output: Now that we know what variables we are working with, we are going to try explore how to visualize that data you collected.

- Class: text
  Output: Visualizing data is important because it adds to our understanding of how the data related to one another and can aid in other analyses.

- Class: video
  Output: Type Yes to go to a link to see a wide variety of ways of visualizing data.
  VideoLink: https://www.r-graph-gallery.com/

- Class: video
  Output: Type Yes to see some really cool, advanced data visualizations.
  VideoLink: https://www.popsci.com/tags/data-visualizations/

- Class: text
  Output: Those are great, but today we are going to start with some simple plots.
  
- Class: text
  Output: We are going to try a type of plot called a PIE CHART.
  
- Class: text
  Output: A pie chart divides up a circle proportional to the values in each category.
  
- Class: figure
  Output: Here is an example pie chart indicating how many times my neighbor (not me) ate sardines and trout.
  Figure: example_pie_chart.R
  FigureType: new 
  
- Class: text
  Output: Now you are going to create your own pie chart visualizing right and left paw boops.
  
- Class: cmd_question
  Output: In the R console, assign to the variable "right" the number 21, an example of right paw boops counted.
  CorrectAnswer: right <-21
  AnswerTests: omnitest(correctExpr='right <- 21')
  Hint: Type right <- 21 in the console. Don't forget that R is case sensitive.

- Class: cmd_question
  Output: Now assign to the variable "left" the number 24, an example of the left paw boops counted.
  CorrectAnswer: left<-24
  AnswerTests: omnitest(correctExpr='left<-24')
  Hint: Type left <- 24 in the console

  
- Class: cmd_question
  Output: To create your pie chart, type pie(c(left,right), labels = c("left","right"), main="Pie chart of boops")
  CorrectAnswer: pie(c(left,right), labels = c("left","right"), main="Pie chart of boops")
  AnswerTests: omnitest(correctExpr='pie(c(left,right), labels = c("left","right"), main="Pie chart of boops")')
  Hint: Type pie(c(left,right), labels = c("left","right"), main="Pie chart of boops") in the console at the command prompt.

  
- Class: text
  Output: Now we are going to create a different plot called a BAR PLOT. In this plot, categories appear on one axis and the value for each category is used to determine the height of the bar for that category.

- Class: figure
  Output: Here is a bar plot indicating how many times a friend (not me) ate cat food and sardines this month.
  Figure: example_bar_plot.R
  FigureType: new

- Class: mult_question
  Output: Based on the bar plot, does my friend probably like to eat cat food or sardines more?
  AnswerChoices: cat food;sardines
  CorrectAnswer: sardines
  AnswerTests: omnitest(correctVal = 'sardines')
  Hint: Mmmmmm fish!!

- Class: text
  Output: Now you are going to create your own bar plot for visualizing boops.

- Class: cmd_question
  Output: To create your bar plot, type barplot(c(right,left))
  CorrectAnswer: barplot(c(right,left))
  AnswerTests: omnitest(correctExpr='barplot(c(right,left))')
  Hint: Type barplot(c(right,left)) in the console at the command prompt.

- Class: text
  Output: A bar plot should have poppped up.  However, there are no labels.  So, we are going to add things (arguments) to our previous command.
  
- Class: cmd_question
  Output: Type the following into the console barplot(c(right, left), names.arg = c("right", "left"), xlab = "Paw", ylab = "Count")
  CorrectAnswer: barplot(c(right, left), names.arg = c("right", "left"), xlab = "Paw", ylab = "Count")
  AnswerTests: omnitest(correctExpr='barplot(c(right, left), names.arg = c("right", "left"), xlab = "Paw", ylab = "Count")')
  Hint: Type barplot(c(right, left), names.arg = c("right", "left"), xlab = "Paw", ylab = "Count") at the command prompt.


